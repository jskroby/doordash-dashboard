{
	"name": "dbcode",
	"displayName": "DBCode - Database Management",
	"pricing": "Free",
	"description": "Connect to PostgreSQL, MySQL, SQL Server, SQLite, Mongo, Oracle, DuckDB and other major databases. AI queries. Create and edit tables, data, functions and procedures. Graph your data. Share reports. And more!",
	"publisher": "dbcode",
	"version": "1.9.1",
	"icon": "out/resources/logos/logo.png",
	"galleryBanner": {
		"color": "#e4ddff",
		"theme": "light"
	},
	"homepage": "https://dbcode.io",
	"qna": "https://github.com/dbcodeio/public/issues",
	"license": "SEE LICENSE IN LICENSE",
	"repository": {
		"type": "git",
		"url": "https://github.com/dbcodeio/public"
	},
	"private": true,
	"engines": {
		"vscode": "^1.90.0"
	},
	"keywords": [
		"SQL",
		"MySQL",
		"Postgresql",
		"Postgres",
		"SQL Server",
		"Database Management",
		"database client",
		"database tool",
		"Database",
		"MongoDB",
		"Cockroach",
		"MariaDB",
		"DB",
		"D1",
		"Redshift",
		"Oracle",
		"DuckDB",
		"Cassandra",
		"Snowflake",
		"DB2",
		"Redis",
		"BigQuery",
		"StarRocks"
	],
	"categories": [
		"AI",
		"Chat",
		"Data Science",
		"Programming Languages"
	],
	"activationEvents": [
		"onRenderer:dbcode-notebook",
		"onNotebook:dbcode-notebook",
		"onLanguage:sql",
		"onChatParticipant:dbcode"
	],
	"main": "./out/extension/extension.js",
	"l10n": "./l10n",
	"contributes": {
		"chatParticipants": [
			{
				"id": "dbcode",
				"name": "dbcode",
				"fullName": "DBCode",
				"description": "%Ask about your database%",
				"isSticky": true,
				"disambiguation": [
					{
						"category": "dbcode",
						"description": "The user wants to generate queries for their database.",
						"examples": [
							"Find all the users who were created in the last month",
							"Write a query to find out information about the users in the database",
							"Can you help me write a query to find out information from the database",
							"I want to write a query to find out information from the database",
							"Can you help me find out information from the database",
							"I want to find out information in the database",
							"I need a query to find out information from the database",
							"Find out information from the database",
							"Find out information in the database",
							"Write a query to find out information from the database",
							"Write a query to find out information in the database"
						]
					}
				]
			}
		],
		"commands": [
			{
				"command": "dbcode.auth.signin",
				"title": "%Sign In%",
				"category": "DBCode",
				"icon": "$(sign-in)"
			},
			{
				"command": "dbcode.auth.signout",
				"title": "%Sign Out%",
				"category": "DBCode",
				"icon": "$(sign-out)"
			},
			{
				"command": "dbcode.account.portal",
				"title": "%Edit License%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.account.seatEdit",
				"title": "%Edit%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.account.seatAdd",
				"title": "%Add Seat%",
				"category": "DBCode",
				"icon": "$(add)"
			},
			{
				"command": "dbcode.account.seatDelete",
				"title": "%Delete%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.account.purchase",
				"title": "%Purchase License%",
				"category": "DBCode",
				"icon": "$(add)"
			},
			{
				"command": "dbcode.ai.changeModel",
				"title": "%Change AI Model%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.notebook.new",
				"title": "%Create New DBCode Notebook%",
				"shortTitle": "%DBCode Notebook%",
				"icon": "$(notebook)",
				"category": "DBCode"
			},
			{
				"command": "dbcode.notebook.saveOutputOn",
				"title": "%Save Output: Off%",
				"icon": "$(error)",
				"category": "DBCode"
			},
			{
				"command": "dbcode.notebook.saveOutputOff",
				"title": "%Save Output: On%",
				"icon": "$(pass)",
				"category": "DBCode"
			},
			{
				"command": "dbcode.sparkle",
				"title": "%Sparkle%",
				"icon": "$(sparkle)",
				"category": "DBCode"
			},
			{
				"command": "dbcode.connections.sqlFile",
				"title": "%Create New SQL File%",
				"shortTitle": "%New SQL File%",
				"icon": "$(new-file)",
				"category": "DBCode"
			},
			{
				"command": "dbcode.connections.execfile",
				"title": "%Execute SQL File%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.editor.open",
				"title": "%Load%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.discovery.manual",
				"title": "%Open with DBCode%",
				"category": "DBCode",
				"icon": "$(plug)"
			},
			{
				"command": "dbcode.discovery.folder",
				"title": "%Discover Connections with DBCode%",
				"category": "DBCode",
				"icon": "$(plug)"
			},
			{
				"command": "dbcode.connections.connect",
				"title": "%Connect%",
				"category": "DBCode",
				"icon": "$(plug)"
			},
			{
				"command": "dbcode.connections.disconnect",
				"title": "%Disconnect%",
				"category": "DBCode",
				"icon": "$(debug-disconnect)"
			},
			{
				"command": "dbcode.connections.treeRefresh",
				"title": "%Refresh%",
				"category": "DBCode",
				"icon": "$(refresh)"
			},
			{
				"command": "dbcode.connections.copyElementLabel",
				"title": "%Copy Name%",
				"category": "DBCode",
				"icon": "$(copy)"
			},
			{
				"command": "dbcode.connections.treeRefreshing",
				"title": "%Refresh%",
				"category": "DBCode",
				"icon": "$(loading~spin)"
			},
			{
				"command": "dbcode.connections.add",
				"title": "%Add Connection%",
				"category": "DBCode",
				"icon": "$(add)"
			},
			{
				"command": "dbcode.connections.sample",
				"title": "%Explore With a Sample Database%",
				"category": "DBCode",
				"icon": "$(add)"
			},
			{
				"command": "dbcode.connections.remove",
				"title": "%Delete Connection%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.connections.ungroup",
				"title": "%Remove from Group%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.connections.group.remove",
				"title": "%Delete Group%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.connections.group.rename",
				"title": "%Rename Group%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.connections.showOnlyDiscovered",
				"title": "%Show Only Discovered Connections%",
				"category": "DBCode",
				"icon": "$(compass-dot)"
			},
			{
				"command": "dbcode.connections.showAll",
				"title": "%Show All Connections%",
				"category": "DBCode",
				"icon": "$(compass-active)"
			},
			{
				"command": "dbcode.connections.filter",
				"title": "%Filter%",
				"category": "DBCode",
				"icon": "$(extensions-filter)"
			},
			{
				"command": "dbcode.connections.filterClear",
				"title": "%Clear Filter%",
				"category": "DBCode",
				"icon": "$(extensions-clear-search-results)"
			},
			{
				"command": "dbcode.connections.filterItems",
				"title": "%Filter%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.connections.filterItemsClear",
				"title": "%Clear Filter%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.providers.remove",
				"title": "%Delete Provider%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.providers.edit",
				"title": "%Edit Provider%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.tunnels.edit",
				"title": "%Edit Tunnel%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.tunnels.add",
				"title": "%Add Tunnel%",
				"category": "DBCode",
				"icon": "$(add)"
			},
			{
				"command": "dbcode.tunnels.delete",
				"title": "%Delete Tunnel%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.connections.edit",
				"title": "%Edit Connection%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.connections.refresh",
				"title": "%Refresh%",
				"category": "DBCode",
				"icon": "$(refresh)"
			},
			{
				"command": "dbcode.connections.copy",
				"title": "%Copy Connection%",
				"category": "DBCode",
				"icon": "$(copy)"
			},
			{
				"command": "dbcode.connections.select",
				"title": "%Select Connection%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.database.create",
				"title": "%Create Database%",
				"category": "DBCode",
				"icon": "$(add)"
			},
			{
				"command": "dbcode.database.rename",
				"title": "%Rename Database%",
				"category": "DBCode",
				"icon": "$(edit)"
			},
			{
				"command": "dbcode.database.drop",
				"title": "%Drop Database%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.editor.execute",
				"title": "%Execute with DBCode%",
				"category": "DBCode",
				"icon": "$(run)"
			},
			{
				"command": "dbcode.editor.execute#selection",
				"title": "%Execute Selection with DBCode%",
				"category": "DBCode",
				"icon": "$(run)"
			},
			{
				"command": "dbcode.editor.apply",
				"title": "%Apply to Database%",
				"category": "DBCode",
				"icon": "$(run)"
			},
			{
				"command": "dbcode.connections.group",
				"title": "%Add to Group%",
				"category": "DBCode",
				"icon": "$(group-by-ref-type)"
			},
			{
				"command": "dbcode.history.enable",
				"title": "%Enable%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.history.copysql",
				"title": "%Copy SQL%",
				"category": "DBCode",
				"icon": "$(copy)"
			},
			{
				"command": "dbcode.history.delete",
				"title": "%Delete%",
				"category": "DBCode",
				"icon": "$(trash)"
			},
			{
				"command": "dbcode.history.loadQuery",
				"title": "%Load Query%",
				"category": "DBCode",
				"icon": "$(new-file)"
			},
			{
				"command": "dbcode.history.showAllQueries",
				"title": "%Queries Only%",
				"category": "DBCode",
				"icon": "$(list-unordered)"
			},
			{
				"command": "dbcode.history.showTreeView",
				"title": "%Show Structured View%",
				"category": "DBCode",
				"icon": "$(list-tree)"
			},
			{
				"command": "dbcode.history.filterQueries",
				"title": "%Filter%",
				"category": "DBCode",
				"icon": "$(extensions-filter)"
			},
			{
				"command": "dbcode.history.clearFilter",
				"title": "%Clear filter%",
				"category": "DBCode",
				"icon": "$(extensions-clear-search-results)"
			},
			{
				"command": "dbcode.history.expandAll",
				"title": "%Expand All%",
				"category": "DBCode",
				"icon": "$(search-expand-results)",
				"enablement": "!dbcode.history.treeView"
			},
			{
				"command": "dbcode.history.collapseAll",
				"title": "%Collapse All%",
				"category": "DBCode",
				"icon": "$(search-collapse-results)",
				"enablement": "!dbcode.history.treeView"
			},
			{
				"command": "dbcode.tables.create",
				"title": "%Create Table%",
				"icon": "$(add)",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.import",
				"title": "%Import Data%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.alter",
				"title": "%Alter Table%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.rename",
				"title": "%Rename Table%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.truncate",
				"title": "%Truncate Table%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.drop",
				"title": "%Drop Table%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.open",
				"title": "%Open Table%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.table.openLimit",
				"title": "%Open with limit...%",
				"category": "DBCode"
			},
			{
				"command": "dbcode.tables.diagram",
				"title": "%Entity Relationship Diagram%",
				"category": "DBCode"
			}
		],
		"keybindings": [
			{
				"command": "dbcode.editor.execute",
				"key": "windows+enter",
				"mac": "cmd+enter",
				"when": "editorTextFocus && !notebookCellListFocused && (editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode"
			},
			{
				"command": "dbcode.editor.apply",
				"key": "windows+enter",
				"mac": "cmd+enter",
				"when": "editorTextFocus && resourceScheme == dbcode"
			},
			{
				"command": "dbcode.connections.view.focus",
				"key": "ctrl+d ctrl+b",
				"mac": "cmd+d cmd+b",
				"when": "(!editorHasSelection && !editorHasMultipleSelections && !terminalFocusInAny) || ((editorHasSelection || editorHasMultipleSelections) && !editorTextFocus && !terminalFocusInAny)"
			}
		],
		"notebooks": [
			{
				"type": "dbcode-notebook",
				"displayName": "%DBCode Notebook%",
				"priority": "default",
				"selector": [
					{
						"filenamePattern": "*.dbcnb"
					},
					{
						"filenamePattern": "*.dbcode"
					}
				]
			}
		],
		"notebookRenderer": [
			{
				"id": "dbcode-notebook-renderer",
				"displayName": "%DBCode Book Renderer%",
				"entrypoint": "./out/webview/notebook.js",
				"requiresMessaging": "always",
				"mimeTypes": [
					"x-application/dbcode"
				]
			}
		],
		"views": {
			"dbcodeActivitybarContainer": [
				{
					"id": "dbcode.connections.view",
					"name": "%Connections%"
				},
				{
					"id": "dbcode.tunnels.view",
					"name": "%Tunnels%"
				},
				{
					"id": "dbcode.history.view",
					"name": "%History%"
				},
				{
					"id": "dbcode.account.view",
					"name": "%Account%"
				},
				{
					"id": "dbcode.help.view",
					"name": "%Help + Suggestions%"
				}
			],
			"dbcodePanelContainer": [
				{
					"type": "webview",
					"id": "dbcode.panelView",
					"name": "DBCode"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "dbcodeActivitybarContainer",
					"icon": "out/resources/logos/icon.svg",
					"title": "DBCode"
				}
			],
			"panel": [
				{
					"id": "dbcodePanelContainer",
					"icon": "",
					"title": "DBCode"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "dbcode.connections.view",
				"contents": "%No connections created.\n[Add Connection](command:dbcode.connections.add)\n[Explore With a Sample Database](command:dbcode.connections.sample)\n%"
			},
			{
				"view": "dbcode.tunnels.view",
				"contents": "%No tunnels created.\n[Add New Tunnel](command:dbcode.tunnels.add)%"
			},
			{
				"view": "dbcode.history.view",
				"contents": "Enable History to record SQL commands.\n[Enable history](command:dbcode.history.enable)",
				"when": "!config.dbcode.history.enabled"
			},
			{
				"view": "dbcode.help.view",
				"contents": "%Looking for something else, or found a bug?\n[Docs](https://dbcode.io/docs)\n[Open GitHub Issue](https://github.com/dbcodeio/public/issues)\n[Email Mike](command:dbcode.email.mike)\n%"
			}
		],
		"menus": {
			"file/newFile": [
				{
					"command": "dbcode.notebook.new",
					"group": "notebook"
				}
			],
			"view/title": [
				{
					"command": "dbcode.connections.add",
					"when": "view == dbcode.connections.view",
					"group": "navigation@1"
				},
				{
					"command": "dbcode.connections.treeRefresh",
					"when": "view == dbcode.connections.view && dbcode.connections.refreshing == false",
					"group": "navigation@2"
				},
				{
					"command": "dbcode.connections.treeRefreshing",
					"when": "view == dbcode.connections.view && dbcode.connections.refreshing == true",
					"group": "navigation@2"
				},
				{
					"command": "dbcode.connections.filter",
					"when": "view == dbcode.connections.view && !dbcode.connections.filtered",
					"group": "navigation@3"
				},
				{
					"command": "dbcode.connections.filterClear",
					"when": "view == dbcode.connections.view && dbcode.connections.filtered",
					"group": "navigation@3"
				},
				{
					"command": "dbcode.connections.group",
					"when": "view == dbcode.connections.view",
					"group": "navigation@4"
				},
				{
					"command": "dbcode.connections.showOnlyDiscovered",
					"when": "view == dbcode.connections.view  && dbcode.connections.showOnlyDiscovered == false",
					"group": "navigation@5"
				},
				{
					"command": "dbcode.connections.showAll",
					"when": "view == dbcode.connections.view && dbcode.connections.showOnlyDiscovered == true",
					"group": "navigation@5"
				},
				{
					"command": "dbcode.history.filterQueries",
					"when": "view == dbcode.history.view && config.dbcode.history.enabled && !dbcode.history.filtered",
					"group": "navigation@1"
				},
				{
					"command": "dbcode.history.clearFilter",
					"when": "view == dbcode.history.view && config.dbcode.history.enabled && dbcode.history.filtered",
					"group": "navigation@1"
				},
				{
					"command": "dbcode.history.showAllQueries",
					"when": "view == dbcode.history.view && config.dbcode.history.enabled && !dbcode.history.treeView",
					"group": "navigation@2"
				},
				{
					"command": "dbcode.history.showTreeView",
					"when": "view == dbcode.history.view && config.dbcode.history.enabled && dbcode.history.treeView",
					"group": "navigation@2"
				},
				{
					"command": "dbcode.history.expandAll",
					"when": "view == dbcode.history.view && dbcode.history.expanded == false && config.dbcode.history.enabled",
					"group": "navigation@3"
				},
				{
					"command": "dbcode.history.collapseAll",
					"when": "view == dbcode.history.view && dbcode.history.expanded == true && config.dbcode.history.enabled",
					"group": "navigation@3"
				},
				{
					"command": "dbcode.tunnels.add",
					"when": "view == dbcode.tunnels.view",
					"group": "navigation"
				},
				{
					"command": "dbcode.auth.signout",
					"when": "view == dbcode.account.view && dbcode.auth.signedin === true",
					"group": "navigation"
				},
				{
					"command": "dbcode.auth.signin",
					"when": "view == dbcode.account.view && dbcode.auth.signedin === false",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "dbcode.account.portal",
					"when": "view == dbcode.account.view && viewItem === license-active",
					"group": "inline"
				},
				{
					"command": "dbcode.account.purchase",
					"when": "view == dbcode.account.view && viewItem === license",
					"group": "inline"
				},
				{
					"command": "dbcode.account.seatAdd",
					"when": "view == dbcode.account.view && viewItem === seats",
					"group": "inline"
				},
				{
					"command": "dbcode.account.seatEdit",
					"when": "view == dbcode.account.view && viewItem === seat",
					"group": "inline@1"
				},
				{
					"command": "dbcode.account.seatDelete",
					"when": "view == dbcode.account.view && viewItem === seat",
					"group": "inline@2"
				},
				{
					"command": "dbcode.tunnels.edit",
					"when": "view == dbcode.tunnels.view",
					"group": "inline@1"
				},
				{
					"command": "dbcode.tunnels.delete",
					"when": "view == dbcode.tunnels.view",
					"group": "inline@2"
				},
				{
					"command": "dbcode.history.loadQuery",
					"when": "view == dbcode.history.view && viewItem == query",
					"group": "inline@1"
				},
				{
					"command": "dbcode.history.copysql",
					"when": "view == dbcode.history.view && viewItem == query",
					"group": "inline@2"
				},
				{
					"command": "dbcode.history.delete",
					"when": "view == dbcode.history.view && (viewItem == query || viewItem == database || viewItem == connection)",
					"group": "inline@3"
				},
				{
					"command": "dbcode.connections.sqlFile",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newfile~/",
					"group": "inline@1"
				},
				{
					"command": "dbcode.notebook.new",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newnotebook~/",
					"group": "inline@2"
				},
				{
					"command": "dbcode.sparkle",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~sparkle~/",
					"group": "inline@3"
				},
				{
					"command": "dbcode.connections.sqlFile",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newfile~/",
					"group": "1open@1"
				},
				{
					"command": "dbcode.notebook.new",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newnotebook~/",
					"group": "1open@2"
				},
				{
					"command": "dbcode.connections.refresh",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/",
					"group": "2connection@1"
				},
				{
					"command": "dbcode.connections.execfile",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~execfile~/",
					"group": "3operation@2"
				},
				{
					"command": "dbcode.database.rename",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~rename~/",
					"group": "9destructive@1"
				},
				{
					"command": "dbcode.database.drop",
					"when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~drop~/",
					"group": "9destructive@2"
				},
				{
					"command": "dbcode.connections.connect",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~connect~/",
					"group": "1"
				},
				{
					"command": "dbcode.database.create",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/  && viewItem =~ /~disconnect~/ && viewItem =~ /~databaseCreate~/",
					"group": "2"
				},
				{
					"command": "dbcode.connections.edit",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
					"group": "2edit@1"
				},
				{
					"command": "dbcode.connections.copy",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
					"group": "2edit@2"
				},
				{
					"command": "dbcode.connections.remove",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~remove~/",
					"group": "4"
				},
				{
					"command": "dbcode.connections.connect",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~connect~/",
					"group": "inline@1"
				},
				{
					"command": "dbcode.connections.disconnect",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~disconnect~/",
					"group": "1connected@2"
				},
				{
					"command": "dbcode.connections.refresh",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && (viewItem =~ /~disconnect~/ || viewItem =~ /~shallow~/) ",
					"group": "1connected@1"
				},
				{
					"command": "dbcode.connections.disconnect",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~disconnect~/",
					"group": "inline@1"
				},
				{
					"command": "dbcode.connections.edit",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
					"group": "inline@2"
				},
				{
					"command": "dbcode.connections.copy",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
					"group": "inline@3"
				},
				{
					"command": "dbcode.connections.remove",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~remove~/",
					"group": "inline@4"
				},
				{
					"command": "dbcode.connections.ungroup",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~ungroup~/",
					"group": "3"
				},
				{
					"command": "dbcode.connections.group",
					"when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~group~/",
					"group": "3"
				},
				{
					"command": "dbcode.connections.group.rename",
					"when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~rename~/",
					"group": "inline@1"
				},
				{
					"command": "dbcode.connections.group.remove",
					"when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~remove~/",
					"group": "inline@2"
				},
				{
					"command": "dbcode.connections.group.rename",
					"when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~rename~/",
					"group": "1"
				},
				{
					"command": "dbcode.connections.group.remove",
					"when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~remove~/",
					"group": "2"
				},
				{
					"command": "dbcode.providers.edit",
					"when": "view == dbcode.connections.view && viewItem == provider",
					"group": "inline@1"
				},
				{
					"command": "dbcode.providers.remove",
					"when": "view == dbcode.connections.view && viewItem == provider",
					"group": "inline@2"
				},
				{
					"command": "dbcode.providers.edit",
					"when": "view == dbcode.connections.view && viewItem == provider",
					"group": "1"
				},
				{
					"command": "dbcode.providers.remove",
					"when": "view == dbcode.connections.view && viewItem == provider",
					"group": "2"
				},
				{
					"command": "dbcode.tables.create",
					"when": "view == dbcode.connections.view && viewItem =~ /^tables-/ && viewItem =~ /~create~/",
					"group": "inline"
				},
				{
					"command": "dbcode.tables.create",
					"when": "view == dbcode.connections.view && viewItem =~ /^tables-/ && viewItem =~ /~create~/",
					"group": "1create@1"
				},
				{
					"command": "dbcode.table.import",
					"when": "view == dbcode.connections.view && viewItem =~ /^tables-/ && viewItem =~ /~import~/",
					"group": "2action@1"
				},
				{
					"command": "dbcode.tables.diagram",
					"when": "view == dbcode.connections.view && (viewItem =~ /^tables-/ || viewItem =~ /^table-/) && viewItem =~ /~diagram~/",
					"group": "3info@1"
				},
				{
					"command": "dbcode.connections.filterItems",
					"when": "view == dbcode.connections.view && viewItem =~ /~filter~/",
					"group": "zdisplay@1"
				},
				{
					"command": "dbcode.connections.filterItemsClear",
					"when": "view == dbcode.connections.view && viewItem =~ /~filtered~/",
					"group": "zdisplay@2"
				},
				{
					"command": "dbcode.connections.copyElementLabel",
					"when": "view == dbcode.connections.view",
					"group": "zzzommon@1"
				},
				{
					"command": "dbcode.table.openLimit",
					"when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~openlimit~/",
					"group": "1open@1"
				},
				{
					"command": "dbcode.table.import",
					"when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~import~/",
					"group": "2actoin@1"
				},
				{
					"command": "dbcode.table.alter",
					"when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~alter~/",
					"group": "3modify@1"
				},
				{
					"command": "dbcode.table.rename",
					"when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~rename~/",
					"group": "3modify@2"
				},
				{
					"command": "dbcode.table.truncate",
					"when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~truncate~/",
					"group": "4destructive@2"
				},
				{
					"command": "dbcode.table.drop",
					"when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~drop~/",
					"group": "4destructive@3"
				}
			],
			"explorer/context": [
				{
					"command": "dbcode.discovery.manual",
					"when": "isFileSystemResource === true && resourceFilename =~ /\\.(db|duckdb|ddb|sqlite|sqlite3|csv|xlsx)$/",
					"group": "navigation"
				},
				{
					"command": "dbcode.discovery.folder",
					"when": "isFileSystemResource === true && explorerResourceIsFolder === true",
					"group": "find"
				}
			],
			"editor/title": [
				{
					"command": "dbcode.editor.execute",
					"when": "(editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode",
					"group": "navigation"
				},
				{
					"command": "dbcode.editor.apply",
					"when": "editorLangId == sql && resourceScheme == dbcode",
					"group": "navigation"
				}
			],
			"editor/context": [
				{
					"when": "resourceLangId == sql && editorHasSelection",
					"command": "dbcode.editor.execute#selection",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == sql && !editorHasSelection && resourceScheme != dbcode",
					"command": "dbcode.editor.execute",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == sql && !editorHasSelection && resourceScheme == dbcode",
					"command": "dbcode.editor.apply",
					"group": "navigation"
				}
			],
			"notebook/toolbar": [
				{
					"when": "notebookType == dbcode-notebook && dbcode.notebook.saveOutput == true",
					"command": "dbcode.notebook.saveOutputOff",
					"group": "navigation@1"
				},
				{
					"when": "notebookType == dbcode-notebook && dbcode.notebook.saveOutput == false",
					"command": "dbcode.notebook.saveOutputOn",
					"group": "navigation@1"
				}
			]
		},
		"colors": [
			{
				"id": "dbcode.highlight",
				"description": "Highlight color",
				"defaults": {
					"dark": "#7655FF",
					"light": "#7655FF"
				}
			},
			{
				"id": "dbcode.BD0014",
				"description": "Color #BD0014",
				"defaults": {
					"dark": "#BD0014",
					"light": "#BD0014"
				}
			},
			{
				"id": "dbcode.F00019",
				"description": "Color #F00019",
				"defaults": {
					"dark": "#F00019",
					"light": "#F00019"
				}
			},
			{
				"id": "dbcode.F33246",
				"description": "Color #F33246",
				"defaults": {
					"dark": "#F33246",
					"light": "#F33246"
				}
			},
			{
				"id": "dbcode.F66675",
				"description": "Color #F66675",
				"defaults": {
					"dark": "#F66675",
					"light": "#F66675"
				}
			},
			{
				"id": "dbcode.F999A3",
				"description": "Color #F999A3",
				"defaults": {
					"dark": "#F999A3",
					"light": "#F999A3"
				}
			},
			{
				"id": "dbcode.FCCCD1",
				"description": "Color #FCCCD1",
				"defaults": {
					"dark": "#FCCCD1",
					"light": "#FCCCD1"
				}
			},
			{
				"id": "dbcode.FF5116",
				"description": "Color #FF5116",
				"defaults": {
					"dark": "#FF5116",
					"light": "#FF5116"
				}
			},
			{
				"id": "dbcode.FF642F",
				"description": "Color #FF642F",
				"defaults": {
					"dark": "#FF642F",
					"light": "#FF642F"
				}
			},
			{
				"id": "dbcode.FF7749",
				"description": "Color #FF7749",
				"defaults": {
					"dark": "#FF7749",
					"light": "#FF7749"
				}
			},
			{
				"id": "dbcode.FF8A62",
				"description": "Color #FF8A62",
				"defaults": {
					"dark": "#FF8A62",
					"light": "#FF8A62"
				}
			},
			{
				"id": "dbcode.FF9D7C",
				"description": "Color #FF9D7C",
				"defaults": {
					"dark": "#FF9D7C",
					"light": "#FF9D7C"
				}
			},
			{
				"id": "dbcode.FFB095",
				"description": "Color #FFB095",
				"defaults": {
					"dark": "#FFB095",
					"light": "#FFB095"
				}
			},
			{
				"id": "dbcode.FFC3AF",
				"description": "Color #FFC3AF",
				"defaults": {
					"dark": "#FFC3AF",
					"light": "#FFC3AF"
				}
			},
			{
				"id": "dbcode.004A37",
				"description": "Color #004A37",
				"defaults": {
					"dark": "#004A37",
					"light": "#004A37"
				}
			},
			{
				"id": "dbcode.00634A",
				"description": "Color #00634A",
				"defaults": {
					"dark": "#00634A",
					"light": "#00634A"
				}
			},
			{
				"id": "dbcode.007D5D",
				"description": "Color #007D5D",
				"defaults": {
					"dark": "#007D5D",
					"light": "#007D5D"
				}
			},
			{
				"id": "dbcode.009670",
				"description": "Color #009670",
				"defaults": {
					"dark": "#009670",
					"light": "#009670"
				}
			},
			{
				"id": "dbcode.00B083",
				"description": "Color #00B083",
				"defaults": {
					"dark": "#00B083",
					"light": "#00B083"
				}
			},
			{
				"id": "dbcode.00E3A9",
				"description": "Color #00E3A9",
				"defaults": {
					"dark": "#00E3A9",
					"light": "#00E3A9"
				}
			},
			{
				"id": "dbcode.0074B3",
				"description": "Color #0074B3",
				"defaults": {
					"dark": "#0074B3",
					"light": "#0074B3"
				}
			},
			{
				"id": "dbcode.0085CC",
				"description": "Color #0085CC",
				"defaults": {
					"dark": "#0085CC",
					"light": "#0085CC"
				}
			},
			{
				"id": "dbcode.0095E6",
				"description": "Color #0095E6",
				"defaults": {
					"dark": "#0095E6",
					"light": "#0095E6"
				}
			},
			{
				"id": "dbcode.00A6FF",
				"description": "Color #00A6FF",
				"defaults": {
					"dark": "#00A6FF",
					"light": "#00A6FF"
				}
			},
			{
				"id": "dbcode.1AAFFF",
				"description": "Color #1AAFFF",
				"defaults": {
					"dark": "#1AAFFF",
					"light": "#1AAFFF"
				}
			},
			{
				"id": "dbcode.33B8FF",
				"description": "Color #33B8FF",
				"defaults": {
					"dark": "#33B8FF",
					"light": "#33B8FF"
				}
			},
			{
				"id": "dbcode.4DC1FF",
				"description": "Color #4DC1FF",
				"defaults": {
					"dark": "#4DC1FF",
					"light": "#4DC1FF"
				}
			},
			{
				"id": "dbcode.7655FF",
				"description": "Color #7655FF",
				"defaults": {
					"dark": "#7655FF",
					"light": "#7655FF"
				}
			},
			{
				"id": "dbcode.F632CD",
				"description": "Color #F632CD",
				"defaults": {
					"dark": "#F632CD",
					"light": "#F632CD"
				}
			},
			{
				"id": "dbcode.FF4A91",
				"description": "Color #FF4A91",
				"defaults": {
					"dark": "#FF4A91",
					"light": "#FF4A91"
				}
			},
			{
				"id": "dbcode.FFC54F",
				"description": "Color #FFC54F",
				"defaults": {
					"dark": "#FFC54F",
					"light": "#FFC54F"
				}
			},
			{
				"id": "dbcode.F9F871",
				"description": "Color #F9F871",
				"defaults": {
					"dark": "#F9F871",
					"light": "#F9F871"
				}
			},
			{
				"id": "dbcode.D5B2A0",
				"description": "Color #D5B2A0",
				"defaults": {
					"dark": "#D5B2A0",
					"light": "#D5B2A0"
				}
			},
			{
				"id": "dbcode.71F9F8",
				"description": "Color #71F9F8",
				"defaults": {
					"dark": "#71F9F8",
					"light": "#71F9F8"
				}
			},
			{
				"id": "dbcode.67BAA7",
				"description": "Color #67BAA7",
				"defaults": {
					"dark": "#67BAA7",
					"light": "#67BAA7"
				}
			},
			{
				"id": "dbcode.3B8EA2",
				"description": "Color #3B8EA2",
				"defaults": {
					"dark": "#3B8EA2",
					"light": "#3B8EA2"
				}
			},
			{
				"id": "dbcode.B2A0D5",
				"description": "Color #B2A0D5",
				"defaults": {
					"dark": "#B2A0D5",
					"light": "#B2A0D5"
				}
			},
			{
				"id": "dbcode.8EA23B",
				"description": "Color #8EA23B",
				"defaults": {
					"dark": "#8EA23B",
					"light": "#8EA23B"
				}
			}
		],
		"languages": [
			{
				"id": "dbcode-notebook",
				"aliases": [
					"DBCode Notebook"
				],
				"extensions": [
					".dbcnb",
					".dbcode"
				],
				"icon": {
					"light": "out/resources/logos/icon_color.svg",
					"dark": "out/resources/logos/icon_color.svg"
				}
			}
		],
		"icons": {
			"dbcode-access-control-list": {
				"description": "Access Control List",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea01"
				}
			},
			"dbcode-alter": {
				"description": "Alter",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea02"
				}
			},
			"dbcode-analytics": {
				"description": "Analytics",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea03"
				}
			},
			"dbcode-audit": {
				"description": "Audit",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea04"
				}
			},
			"dbcode-authentication": {
				"description": "Authentication",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea05"
				}
			},
			"dbcode-availability": {
				"description": "Availability",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea06"
				}
			},
			"dbcode-azure": {
				"description": "Azure",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea07"
				}
			},
			"dbcode-backup": {
				"description": "Backup",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea08"
				}
			},
			"dbcode-bigquery": {
				"description": "Bigquery",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea09"
				}
			},
			"dbcode-binary": {
				"description": "Binary",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea0a"
				}
			},
			"dbcode-bit": {
				"description": "Bit",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea0b"
				}
			},
			"dbcode-boolean": {
				"description": "Boolean",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea0c"
				}
			},
			"dbcode-bottleneck": {
				"description": "Bottleneck",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea0d"
				}
			},
			"dbcode-cache": {
				"description": "Cache",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea0e"
				}
			},
			"dbcode-cascade": {
				"description": "Cascade",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea0f"
				}
			},
			"dbcode-cassandra": {
				"description": "Cassandra",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea10"
				}
			},
			"dbcode-change-data-capture": {
				"description": "Change Data Capture",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea11"
				}
			},
			"dbcode-checkpoint": {
				"description": "Checkpoint",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea12"
				}
			},
			"dbcode-cluster": {
				"description": "Cluster",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea13"
				}
			},
			"dbcode-cockroach": {
				"description": "Cockroach",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea14"
				}
			},
			"dbcode-collation": {
				"description": "Collation",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea15"
				}
			},
			"dbcode-collection": {
				"description": "Collection",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea16"
				}
			},
			"dbcode-column": {
				"description": "Column",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea17"
				}
			},
			"dbcode-commit": {
				"description": "Commit",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea18"
				}
			},
			"dbcode-consistency": {
				"description": "Consistency",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea19"
				}
			},
			"dbcode-constraint": {
				"description": "Constraint",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea1a"
				}
			},
			"dbcode-crash-recovery": {
				"description": "Crash Recovery",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea1b"
				}
			},
			"dbcode-crud": {
				"description": "Crud",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea1c"
				}
			},
			"dbcode-csv": {
				"description": "Csv",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea1d"
				}
			},
			"dbcode-cursor": {
				"description": "Cursor",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea1e"
				}
			},
			"dbcode-d1": {
				"description": "D1",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea1f"
				}
			},
			"dbcode-data-source": {
				"description": "Data Source",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea20"
				}
			},
			"dbcode-date": {
				"description": "Date",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea21"
				}
			},
			"dbcode-datetime": {
				"description": "Datetime",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea22"
				}
			},
			"dbcode-datetimetz": {
				"description": "Datetimetz",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea23"
				}
			},
			"dbcode-db2": {
				"description": "Db2",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea24"
				}
			},
			"dbcode-ddl": {
				"description": "Ddl",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea25"
				}
			},
			"dbcode-deadlock": {
				"description": "Deadlock",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea26"
				}
			},
			"dbcode-dependency": {
				"description": "Dependency",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea27"
				}
			},
			"dbcode-deployment": {
				"description": "Deployment",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea28"
				}
			},
			"dbcode-doris": {
				"description": "Doris",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea29"
				}
			},
			"dbcode-duckdb": {
				"description": "Duckdb",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea2a"
				}
			},
			"dbcode-durability": {
				"description": "Durability",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea2b"
				}
			},
			"dbcode-encryption": {
				"description": "Encryption",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea2c"
				}
			},
			"dbcode-enum-member": {
				"description": "Enum Member",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea2d"
				}
			},
			"dbcode-enum": {
				"description": "Enum",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea2e"
				}
			},
			"dbcode-excel": {
				"description": "Excel",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea2f"
				}
			},
			"dbcode-failure": {
				"description": "Failure",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea30"
				}
			},
			"dbcode-foreign-data-wrapper": {
				"description": "Foreign Data Wrapper",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea31"
				}
			},
			"dbcode-foreign-key": {
				"description": "Foreign Key",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea32"
				}
			},
			"dbcode-function": {
				"description": "Function",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea33"
				}
			},
			"dbcode-geography": {
				"description": "Geography",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea34"
				}
			},
			"dbcode-geometry": {
				"description": "Geometry",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea35"
				}
			},
			"dbcode-hierarchy": {
				"description": "Hierarchy",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea36"
				}
			},
			"dbcode-hint": {
				"description": "Hint",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea37"
				}
			},
			"dbcode-import": {
				"description": "Import",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea38"
				}
			},
			"dbcode-index": {
				"description": "Index",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea39"
				}
			},
			"dbcode-insert": {
				"description": "Insert",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea3a"
				}
			},
			"dbcode-ip": {
				"description": "Ip",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea3b"
				}
			},
			"dbcode-isolation": {
				"description": "Isolation",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea3c"
				}
			},
			"dbcode-issue": {
				"description": "Issue",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea3d"
				}
			},
			"dbcode-json": {
				"description": "Json",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea3e"
				}
			},
			"dbcode-key": {
				"description": "Key",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea3f"
				}
			},
			"dbcode-libsql": {
				"description": "Libsql",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea40"
				}
			},
			"dbcode-license": {
				"description": "License",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea41"
				}
			},
			"dbcode-mac": {
				"description": "Mac",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea42"
				}
			},
			"dbcode-mainteance": {
				"description": "Mainteance",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea43"
				}
			},
			"dbcode-mariadb": {
				"description": "Mariadb",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea44"
				}
			},
			"dbcode-materialized-view": {
				"description": "Materialized View",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea45"
				}
			},
			"dbcode-merge": {
				"description": "Merge",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea46"
				}
			},
			"dbcode-microsoft": {
				"description": "Microsoft",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea47"
				}
			},
			"dbcode-migration": {
				"description": "Migration",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea48"
				}
			},
			"dbcode-mongodb": {
				"description": "Mongodb",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea49"
				}
			},
			"dbcode-motherduck": {
				"description": "Motherduck",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea4a"
				}
			},
			"dbcode-mssql": {
				"description": "Mssql",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea4b"
				}
			},
			"dbcode-mysql": {
				"description": "Mysql",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea4c"
				}
			},
			"dbcode-normalization": {
				"description": "Normalization",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea4d"
				}
			},
			"dbcode-null": {
				"description": "Null",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea4e"
				}
			},
			"dbcode-number": {
				"description": "Number",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea4f"
				}
			},
			"dbcode-odbc": {
				"description": "Odbc",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea50"
				}
			},
			"dbcode-olap": {
				"description": "Olap",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea51"
				}
			},
			"dbcode-oltp": {
				"description": "Oltp",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea52"
				}
			},
			"dbcode-optimizer": {
				"description": "Optimizer",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea53"
				}
			},
			"dbcode-oracle": {
				"description": "Oracle",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea54"
				}
			},
			"dbcode-parameters": {
				"description": "Parameters",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea55"
				}
			},
			"dbcode-pivot": {
				"description": "Pivot",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea56"
				}
			},
			"dbcode-postgres": {
				"description": "Postgres",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea57"
				}
			},
			"dbcode-primary-key": {
				"description": "Primary Key",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea58"
				}
			},
			"dbcode-procedure": {
				"description": "Procedure",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea59"
				}
			},
			"dbcode-query": {
				"description": "Query",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea5a"
				}
			},
			"dbcode-read": {
				"description": "Read",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea5b"
				}
			},
			"dbcode-recovery": {
				"description": "Recovery",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea5c"
				}
			},
			"dbcode-redis": {
				"description": "Redis",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea5d"
				}
			},
			"dbcode-redshift": {
				"description": "Redshift",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea5e"
				}
			},
			"dbcode-relational-database": {
				"description": "Relational Database",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea5f"
				}
			},
			"dbcode-replication": {
				"description": "Replication",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea60"
				}
			},
			"dbcode-return": {
				"description": "Return",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea61"
				}
			},
			"dbcode-rollback": {
				"description": "Rollback",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea62"
				}
			},
			"dbcode-schema": {
				"description": "Schema",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea63"
				}
			},
			"dbcode-select": {
				"description": "Select",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea64"
				}
			},
			"dbcode-server": {
				"description": "Server",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea65"
				}
			},
			"dbcode-singlestore": {
				"description": "Singlestore",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea66"
				}
			},
			"dbcode-snowflake": {
				"description": "Snowflake",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea67"
				}
			},
			"dbcode-sort": {
				"description": "Sort",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea68"
				}
			},
			"dbcode-split": {
				"description": "Split",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea69"
				}
			},
			"dbcode-sql": {
				"description": "Sql",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea6a"
				}
			},
			"dbcode-sqlite": {
				"description": "Sqlite",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea6b"
				}
			},
			"dbcode-starrocks": {
				"description": "Starrocks",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea6c"
				}
			},
			"dbcode-string": {
				"description": "String",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea6d"
				}
			},
			"dbcode-table": {
				"description": "Table",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea6e"
				}
			},
			"dbcode-time": {
				"description": "Time",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea6f"
				}
			},
			"dbcode-timescale": {
				"description": "Timescale",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea70"
				}
			},
			"dbcode-timetz": {
				"description": "Timetz",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea71"
				}
			},
			"dbcode-trigger": {
				"description": "Trigger",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea72"
				}
			},
			"dbcode-type": {
				"description": "Type",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea73"
				}
			},
			"dbcode-unique-constraint": {
				"description": "Unique Constraint",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea74"
				}
			},
			"dbcode-unknown": {
				"description": "Unknown",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea75"
				}
			},
			"dbcode-update": {
				"description": "Update",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea76"
				}
			},
			"dbcode-uuid": {
				"description": "Uuid",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea77"
				}
			},
			"dbcode-vector": {
				"description": "Vector",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea78"
				}
			},
			"dbcode-view": {
				"description": "View",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea79"
				}
			},
			"dbcode-void": {
				"description": "Void",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea7a"
				}
			},
			"dbcode-xml": {
				"description": "Xml",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea7b"
				}
			},
			"dbcode-yugabyte": {
				"description": "Yugabyte",
				"default": {
					"fontPath": "out/resources/icons.woff",
					"fontCharacter": "\\ea7c"
				}
			}
		},
		"configuration": [
			{
				"title": "%Results%",
				"order": 1,
				"type": "object",
				"properties": {
					"dbcode.maxTabs": {
						"order": 1,
						"type": "number",
						"default": 3,
						"markdownDescription": "%Number of tabs to keep per connection in the results panel (set to 0 for no tabs).%"
					},
					"dbcode.notebook.maxTabs": {
						"order": 2,
						"type": "number",
						"default": 3,
						"markdownDescription": "%Number of tabs to keep per notebook output cell (set to 0 for no tabs).%"
					},
					"dbcode.rowsToLoad": {
						"order": 3,
						"type": "number",
						"default": 100,
						"markdownDescription": "%Number of rows to load when opening a table or view.%"
					},
					"dbcode.pagination": {
						"order": 4,
						"type": "boolean",
						"default": false,
						"markdownDescription": "%Paginate results.%"
					},
					"dbcode.paginationSize": {
						"order": 5,
						"type": "string",
						"default": "Auto",
						"enum": [
							"Auto",
							"10",
							"20",
							"50",
							"100",
							"200",
							"500"
						],
						"enumDescriptions": [
							"%Fit the number of results per page to the number of rows that can be displayed without scrolling.%",
							"%Show 10 results per page.%",
							"%Show 20 results per page.%",
							"%Show 50 results per page.%",
							"%Show 100 results per page.%",
							"%Show 200 results per page.%",
							"%Show 500 results per page.%"
						],
						"markdownDescription": "%Number of rows to show per page when paginating results.%"
					},
					"dbcode.orderByPrimaryKey": {
						"order": 6,
						"type": "string",
						"default": "No",
						"enum": [
							"No",
							"Ascending",
							"Descending"
						],
						"enumDescriptions": [
							"%Do not order by the primary key.%",
							"%Order by the primary key in ascending order.%",
							"%Order by the primary key in descending order.%"
						],
						"markdownDescription": "%When opening a table, order by the primary key if present.%"
					},
					"dbcode.fontSize": {
						"order": 7,
						"type": "string",
						"default": "",
						"markdownDescription": "%Controls the font size of the results in pixels. If empty, the font size will be the same as the editor font size.%"
					}
				}
			},
			{
				"title": "%Data Formats%",
				"order": 3,
				"type": "object",
				"properties": {
					"dbcode.format.dateLocalTimezone": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "%Show dates in your computers timezone when dates contain a timezone.%"
					},
					"dbcode.format.dateStyle": {
						"type": "string",
						"default": "ISO 9075",
						"enum": [
							"ISO 9075",
							"Locale"
						],
						"enumDescriptions": [
							"%YYYY-MM-DD hh:mm:ss - Will include fractional sections and timezone if present.%",
							"%Your computers locale format.%"
						],
						"markdownDescription": "%Format to display dates and times in.%"
					}
				}
			},
			{
				"title": "%AI%",
				"order": 5,
				"type": "object",
				"properties": {
					"dbcode.ai.modelId": {
						"title": "%Copilot Model ID%",
						"type": "string",
						"default": "",
						"description": "%The model used with the Copilot extension, when installed/enabled. If Copilot is not installed DBCode's hosted llama 3 model.%"
					},
					"dbcode.ai.inlineCompletion": {
						"title": "%Inline Completion%",
						"type": "boolean",
						"default": true,
						"description": "%Generate inline completions using AI (Uses Copilot if installed/enabled, otherwise DBCode's hosted llama 3).%"
					}
				}
			},
			{
				"title": "%History%",
				"order": 6,
				"type": "object",
				"properties": {
					"dbcode.history.enabled": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "%Record query history%"
					},
					"dbcode.history.recordsPerDatabase": {
						"type": "number",
						"default": 2000,
						"markdownDescription": "%Number of records to store per database.%"
					}
				}
			},
			{
				"title": "%Connection Roles%",
				"order": 7,
				"type": "object",
				"properties": {
					"dbcode.connection.role.development": {
						"order": 1,
						"type": "object",
						"markdownDescription": "%Permissions for the development role.%",
						"properties": {
							"select": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"insert": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"update": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"delete": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"truncate": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"execute": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"create": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"alter": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"drop": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"other": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							}
						},
						"additionalProperties": false,
						"default": {
							"select": "allow",
							"insert": "allow",
							"update": "allow",
							"delete": "allow",
							"truncate": "allow",
							"execute": "allow",
							"create": "allow",
							"alter": "allow",
							"drop": "allow",
							"other": "allow"
						}
					},
					"dbcode.connection.role.testing": {
						"type": "object",
						"order": 2,
						"markdownDescription": "%Permissions for the testing role.%",
						"properties": {
							"select": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"insert": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"update": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"delete": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"truncate": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"execute": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"create": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"alter": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"drop": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"other": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							}
						},
						"additionalProperties": false,
						"default": {
							"select": "allow",
							"insert": "allow",
							"update": "allow",
							"delete": "allow",
							"truncate": "allow",
							"execute": "allow",
							"create": "ask",
							"alter": "ask",
							"drop": "ask",
							"other": "ask"
						}
					},
					"dbcode.connection.role.production": {
						"type": "object",
						"order": 3,
						"markdownDescription": "%Permissions for the production role.%",
						"properties": {
							"select": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"insert": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"update": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"delete": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"truncate": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"execute": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"create": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"alter": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"drop": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							},
							"other": {
								"type": "string",
								"default": "allow",
								"enum": [
									"allow",
									"ask",
									"deny"
								],
								"enumDescriptions": [
									"%Allow the statement to be executed.%",
									"%Ask if the statement should be executed.%",
									"%Deny the statement from being executed.%"
								]
							}
						},
						"additionalProperties": false,
						"default": {
							"select": "allow",
							"insert": "ask",
							"update": "ask",
							"delete": "ask",
							"truncate": "deny",
							"execute": "ask",
							"create": "deny",
							"alter": "deny",
							"drop": "deny",
							"other": "ask"
						}
					}
				}
			},
			{
				"title": "%Connection Color%",
				"order": 8,
				"type": "object",
				"properties": {
					"dbcode.color.applyToActiveTabBorder": {
						"order": 1,
						"default": true,
						"markdownDescription": "%Apply connection color to the active editor tab lower border.%",
						"type": "boolean"
					},
					"dbcode.color.applyToActiveTabBorderTop": {
						"order": 2,
						"default": false,
						"markdownDescription": "%Apply connection color to the active editor tab top border.%",
						"type": "boolean"
					},
					"dbcode.color.applyToActiveEditorTabBackground": {
						"order": 3,
						"default": false,
						"markdownDescription": "%Apply connection color to the active editor tab background.%",
						"type": "boolean"
					},
					"dbcode.color.applyToStatusBarBackground": {
						"order": 4,
						"default": false,
						"markdownDescription": "%Apply connection color to the Status Bar background.%",
						"type": "boolean"
					},
					"dbcode.color.applyToCommandCenterBackground": {
						"order": 5,
						"default": false,
						"markdownDescription": "%Apply connection color to the Command Center background.%",
						"type": "boolean"
					}
				}
			},
			{
				"title": "%Cloud Providers, Connections and Tunnels%",
				"order": 999,
				"type": "object",
				"properties": {
					"dbcode.connections": {
						"type": "array",
						"markdownDescription": "%Connections%",
						"default": [],
						"items": {
							"type": "object",
							"properties": {
								"connectionId": {
									"type": "string",
									"description": "%Connection ID%"
								},
								"tunnelId": {
									"type": [
										"string",
										"null"
									],
									"description": "%Tunnel ID to connect through%"
								},
								"connectionType": {
									"type": "string",
									"enum": [
										"host",
										"socket"
									],
									"description": "%Connection Type%"
								},
								"group": {
									"type": "string",
									"description": "%Group name%"
								},
								"name": {
									"type": "string",
									"description": "%Connection name%"
								},
								"host": {
									"type": "string",
									"description": "%Server address%",
									"default": "127.0.0.1"
								},
								"port": {
									"type": "number",
									"description": "%Port%"
								},
								"database": {
									"type": [
										"string",
										"null"
									],
									"description": "%Database name%"
								},
								"username": {
									"type": "string",
									"description": "%Username%"
								},
								"password": {
									"type": [
										"string",
										"null"
									],
									"description": "%Password%"
								},
								"salt": {
									"type": [
										"string",
										"null"
									],
									"description": "%The key to encrypt the password with when saving.%"
								},
								"ssl": {
									"type": [
										"boolean",
										"null"
									],
									"description": "%Enable SSL%"
								},
								"sslTrustCertificate": {
									"type": [
										"boolean",
										"null"
									],
									"description": "%Trust server certificate%"
								},
								"savePassword": {
									"type": "string",
									"description": "%Save password%",
									"default": "no",
									"enum": [
										"no",
										"session",
										"yes",
										"encrypted",
										"secretStorage",
										"na",
										"cmd"
									],
									"enumDescriptions": [
										"%It will not be saved, you will be prompted for it when connecting each time.%",
										"%It will not be saved, you will be prompted for it ONCE when connecting each time VSCode starts.%",
										"%It will be saved in settings as plain text (not recommended).%",
										"%It will be encrypted and saved in settings using an encryption string. You will be prompted to enter an encryption string which will encrypt the password.%",
										"%It will be saved in VS Code secret storage%",
										"%It is not required%",
										"%The command will be executed and the output will be the password%"
									]
								},
								"driver": {
									"type": "string",
									"markdownDescription": "%Driver used for connection%",
									"enum": [
										"postgres",
										"mysql",
										"mariadb",
										"mssql",
										"azure",
										"cockroach",
										"yugabyte",
										"timescale",
										"mongodb",
										"sqlite",
										"libsql",
										"d1",
										"redshift",
										"oracle",
										"duckdb",
										"cassandra",
										"snowflake",
										"motherduck",
										"db2",
										"redis",
										"starrocks",
										"singlestore",
										"doris",
										"bigquery",
										"excel"
									]
								},
								"connectionTimeout": {
									"type": "number",
									"description": "%Connection timeout in seconds.%",
									"default": 30
								},
								"filters": {
									"type": "object",
									"description": "%Filters%",
									"default": ""
								},
								"color": {
									"type": "string",
									"description": "%Color for the connection%",
									"default": "",
									"enum": [
										"#F00019",
										"#00A6FF",
										"#7655FF",
										"#F632CD",
										"#FF4A91",
										"#FF8A62",
										"#FFC54F",
										"#F9F871",
										"#009670",
										"#67BAA7",
										"#3B8EA2",
										"#B2A0D5"
									],
									"enumDescriptions": [
										"#F00019",
										"#00A6FF",
										"#7655FF",
										"#F632CD",
										"#FF4A91",
										"#FF8A62",
										"#FFC54F",
										"#F9F871",
										"#009670",
										"#67BAA7",
										"#3B8EA2",
										"#B2A0D5"
									]
								},
								"driverOptions": {
									"type": "object",
									"markdownDescription": "%Connection options specific to the driver.%",
									"properties": {}
								}
							}
						}
					},
					"dbcode.tunnels": {
						"type": "array",
						"markdownDescription": "%Tunnels%",
						"default": [],
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "%Tunnel ID%"
								},
								"type": {
									"type": "string",
									"enum": [
										"ssh"
									],
									"enumDescriptions": [
										"SSH Connection"
									],
									"description": "%Tunnel Type%"
								},
								"name": {
									"type": "string",
									"description": "%Tunnel Name%"
								},
								"host": {
									"type": "string",
									"description": "%Tunnel Host%"
								},
								"port": {
									"type": "number",
									"description": "%Tunnel Port%"
								},
								"authType": {
									"type": "string",
									"enum": [
										"password",
										"key",
										"agent"
									],
									"enumDescription": [
										"%Password authentication%",
										"%Key file authentication%",
										"%SSH Agent authentication%"
									],
									"description": "%Tunnel Authentication Type%"
								},
								"savePassword": {
									"type": "string",
									"description": "%Save password%",
									"default": "no",
									"enum": [
										"na",
										"no",
										"session",
										"yes",
										"encrypted",
										"secretStorage"
									],
									"enumDescriptions": [
										"%It is not required.%",
										"%It will not be saved, you will be prompted for it when connecting each time.%",
										"%It will not be saved, you will be prompted for it ONCE when connecting each time VSCode starts.%",
										"%It will be saved in settings as plain text (not recommended).%",
										"%It will be encrypted and saved in settings using an encryption string. You will be prompted to enter an encryption string which will encrypt the password.%",
										"%It will be saved in VS Code secret storage%"
									]
								},
								"password": {
									"type": [
										"string",
										"null"
									],
									"description": "%Tunnel Password (for password or key authentication.%"
								},
								"privateKeyPath": {
									"type": [
										"string",
										"null"
									],
									"description": "%Tunnel private key path%"
								},
								"debug": {
									"type": "boolean",
									"description": "%Enable debug logging for the tunnel.%"
								}
							}
						}
					},
					"dbcode.cloudProviders": {
						"type": "array",
						"markdownDescription": "%Cloud Providers%",
						"default": [],
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "%Cloud Provider ID%"
								},
								"name": {
									"type": "string",
									"description": "%Cloud Provider name%"
								},
								"provider": {
									"type": "string",
									"markdownDescription": "%Cloud Provider%",
									"enum": [
										"aiven",
										"azure",
										"cloudflare",
										"digitalocean",
										"turso",
										"neon",
										"supabase"
									]
								}
							}
						}
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "npm run esbuild -- --minify",
		"lint": "eslint src --ext ts",
		"watch": "npm run esbuild -- --sourcemap --watch",
		"test": "vitest",
		"test-e2e": "wdio run ./wdio.conf.ts",
		"esbuild": "npx tsx ./scripts/build.ts",
		"prepare": "husky install",
		"postinstall": "patch-package",
		"version": "tsx ./scripts/changelog.ts && git add CHANGELOG.md",
		"check-types": "tsc --noEmit"
	},
	"devDependencies": {
		"@azure-rest/ai-translation-text": "^1.0.1",
		"@azure/app-configuration": "^1.8.0",
		"@azure/keyvault-secrets": "^4.8.0",
		"@biomejs/biome": "^1.9.4",
		"@chevrotain/types": "^11.0.3",
		"@testcontainers/mssqlserver": "^10.13.2",
		"@testcontainers/mysql": "^10.13.2",
		"@testcontainers/postgresql": "^10.13.2",
		"@types/big.js": "^6.2.2",
		"@types/glob": "^8.1.0",
		"@types/html-escaper": "^3.0.2",
		"@types/ibm_db": "^3.2.0",
		"@types/json-diff": "^1.0.3",
		"@types/json2md": "^1.5.4",
		"@types/jstoxml": "^5.0.0",
		"@types/lodash-es": "^4.17.12",
		"@types/mocha": "^10.0.9",
		"@types/node": "^20.14.11",
		"@types/oracledb": "^6.5.1",
		"@types/picomatch": "^3.0.1",
		"@types/postcss-url": "^10.0.4",
		"@types/redis-info": "^3.0.3",
		"@types/semver": "^7.5.8",
		"@types/sshpk": "^1.17.4",
		"@types/tar": "^6.1.13",
		"@types/validator": "^13.12.2",
		"@types/vscode": "^1.90.0",
		"@types/vscode-notebook-renderer": "^1.72.3",
		"@vitest/coverage-v8": "^3.0.7",
		"@vscode/l10n-dev": "^0.0.35",
		"@wdio/cli": "^9.2.1",
		"@wdio/local-runner": "^9.2.1",
		"@wdio/mocha-framework": "^9.1.3",
		"@wdio/spec-reporter": "^9.1.3",
		"big.js": "^6.2.2",
		"esbuild": "^0.25.0",
		"esbuild-plugin-copy": "^2.1.1",
		"expect": "^29.7.0",
		"git-pull-run": "^1.5.0",
		"glob": "^11.0.1",
		"husky": "^9.1.7",
		"json5": "^2.2.3",
		"license-checker": "^25.0.1",
		"mocha": "^11.1.0",
		"oci-common": "^2.103.0",
		"oci-objectstorage": "^2.103.0",
		"oci-secrets": "^2.103.0",
		"openai": "^4.86.1",
		"patch-package": "^8.0.0",
		"source-map": "^0.7.4",
		"svgtofont": "^6.3.1",
		"testcontainers": "^10.13.2",
		"titleize": "^4.0.0",
		"ts-node": "^10.9.2",
		"tsx": "^4.19.3",
		"vitest": "^3.0.7",
		"wdio-vscode-service": "^6.1.2",
		"wdio-wait-for": "^3.0.11"
	},
	"dependencies": {
		"@ag-grid-community/styles": "^33.0.3",
		"@date-fns/utc": "^2.1.0",
		"@duckdb/node-api": "^1.2.0-alpha.15",
		"@google-cloud/bigquery": "^7.9.2",
		"@joint/layout-directed-graph": "^4.0.3",
		"@libsql/client": "^0.14.0",
		"@types/mssql": "^9.1.7",
		"@vscode-elements/elements": "^1.13.1",
		"@vscode/codicons": "^0.0.36",
		"@vscode/l10n": "^0.0.18",
		"@vscode/prompt-tsx": "^0.3.0-alpha.5",
		"ag-charts-enterprise": "^11.1.1",
		"ag-grid-enterprise": "^33.1.1",
		"another-json-xml": "^2.0.7",
		"base64-js": "^1.5.1",
		"better-sqlite3-multiple-ciphers": "11.3.0",
		"cassandra-driver": "^4.8.0",
		"cbor-x": "^1.6.0",
		"chevrotain": "^11.0.3",
		"date-fns": "^4.1.0",
		"debounce": "^2.2.0",
		"detect-libc": "^2.0.3",
		"dotenv": "^16.4.7",
		"fast-xml-parser": "^5.0.8",
		"file-type": "^20.4.0",
		"generate-password": "^1.7.1",
		"gpt-tokenizer": "^2.8.1",
		"hotkeys-js": "^3.13.9",
		"html-escaper": "^3.0.3",
		"ibm_db": "^3.3.0",
		"interactjs": "^1.10.27",
		"json-diff": "^1.0.6",
		"json2md": "^2.0.2",
		"jspdf": "^3.0.0",
		"jwt-decode": "^4.0.0",
		"lit": "^3.2.1",
		"lodash-es": "^4.17.21",
		"mariadb": "^3.4.0",
		"mongodb": "^6.14.0",
		"mssql": "^11.0.1",
		"oracledb": "^6.8.0",
		"p-queue": "^8.1.0",
		"panzoom": "^9.4.3",
		"picomatch": "^4.0.2",
		"postgres": "^3.4.5",
		"posthog-node": "^4.8.1",
		"pretty-ms": "^9.2.0",
		"query-string": "^9.1.1",
		"redis": "^4.7.0",
		"redis-info": "^3.1.0",
		"semver": "^7.7.1",
		"shiki": "^3.1.0",
		"snowflake-sdk": "^2.0.2",
		"sql-formatter": "^15.4.11",
		"sql-query-identifier": "^2.8.0",
		"ssh-config": "^5.0.3",
		"sshpk": "^1.18.0",
		"svg2pdf.js": "^2.4.0",
		"tablemark": "^3.1.0",
		"tar": "^7.4.3",
		"tinycolor2": "^1.6.0",
		"tunnel-ssh": "^5.2.0",
		"typed-emitter": "^2.1.0",
		"undo-manager": "^1.1.1",
		"validator": "^13.12.0",
		"vscode-messenger": "^0.4.5",
		"vscode-messenger-webview": "^0.4.5",
		"wkx": "^0.5.0",
		"xlsx": "^0.18.5",
		"yaml": "^2.7.0"
	},
	"__metadata": {
		"id": "a172cbe5-f099-458f-b024-382d48f54aa0",
		"publisherId": "3fc87ad8-2dda-4d73-b238-7c0126f3b397",
		"publisherDisplayName": "dbcode",
		"targetPlatform": "universal",
		"isApplicationScoped": false,
		"isPreReleaseVersion": false,
		"hasPreReleaseVersion": false,
		"installedTimestamp": 1742700093041,
		"pinned": false,
		"preRelease": false,
		"source": "gallery"
	}
}